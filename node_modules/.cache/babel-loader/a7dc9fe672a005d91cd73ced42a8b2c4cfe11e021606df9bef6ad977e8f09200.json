{"ast":null,"code":"var _jsxFileName = \"/Users/liumeng/Documents/flask_survey/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://pkmnyoyvezizgqzycyuz.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBrbW55b3l2ZXppemdxenljeXV6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjgyMjU4MDAsImV4cCI6MjA0MzgwMTgwMH0.le8V0aqC8jouFoUC-3XD9bCWqEPXsqInu9buiwzlpKU';\nconst supabase = createClient(supabaseUrl, supabaseKey);\nconst conditions = ['A', 'B', 'C'];\nconst vignettes = {\n  'A': ['Vignette A1', 'Vignette A2', 'Vignette A3'],\n  'B': ['Vignette B1', 'Vignette B2', 'Vignette B3'],\n  'C': ['Vignette C1', 'Vignette C2', 'Vignette C3']\n};\nconst questions = [{\n  'id': 'q1',\n  'text': 'What is your opinion?',\n  'type': 'likert',\n  'options': ['Strongly Disagree', 'Disagree', 'Neutral', 'Agree', 'Strongly Agree']\n}, {\n  'id': 'q2',\n  'text': 'Please explain:',\n  'type': 'text'\n}];\nfunction App() {\n  _s();\n  const [survey, setSurvey] = useState(null);\n  const [currentVignetteIndex, setCurrentVignetteIndex] = useState(0);\n  const [responses, setResponses] = useState({});\n  const [isComplete, setIsComplete] = useState(false);\n  const [respondentId, setRespondentId] = useState(null);\n  useEffect(() => {\n    assignCondition();\n  }, []);\n  const assignCondition = async () => {\n    try {\n      const condition = conditions[Math.floor(Math.random() * conditions.length)];\n      const {\n        data,\n        error\n      } = await supabase.from('respondents').insert({\n        condition: condition\n      }).select().single();\n      if (error) throw error;\n      setRespondentId(data.id);\n      setSurvey({\n        condition,\n        vignettes: vignettes[condition],\n        questions\n      });\n    } catch (error) {\n      console.error('Error assigning condition:', error);\n      alert('Error starting survey. Please try again.');\n    }\n  };\n  const handleResponse = (questionId, response) => {\n    setResponses(prev => ({\n      ...prev,\n      [currentVignetteIndex]: {\n        ...prev[currentVignetteIndex],\n        [questionId]: response\n      }\n    }));\n  };\n  const nextVignette = () => {\n    if (currentVignetteIndex < survey.vignettes.length - 1) {\n      setCurrentVignetteIndex(currentVignetteIndex + 1);\n    } else {\n      setIsComplete(true);\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const {\n        error: updateError\n      } = await supabase.from('respondents').update({\n        submitted: true\n      }).eq('id', respondentId);\n      if (updateError) throw updateError;\n      const {\n        error: insertError\n      } = await supabase.from('survey_responses').insert({\n        respondent_id: respondentId,\n        response_data: responses\n      });\n      if (insertError) throw insertError;\n      alert('Survey submitted successfully!');\n    } catch (error) {\n      console.error('Error submitting survey:', error);\n      alert('Error submitting survey. Please try again.');\n    }\n  };\n  if (!survey) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), !isComplete ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: survey.vignettes[currentVignetteIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), survey.questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), question.type === 'likert' ? question.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleResponse(question.id, option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => handleResponse(question.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextVignette,\n        children: currentVignetteIndex < survey.vignettes.length - 1 ? 'Next' : 'Finish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for completing the survey. Click submit to record your responses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F8mbHJMdUQ7fNg+cZ3U6DTn9u4U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","supabase","conditions","vignettes","questions","App","_s","survey","setSurvey","currentVignetteIndex","setCurrentVignetteIndex","responses","setResponses","isComplete","setIsComplete","respondentId","setRespondentId","assignCondition","condition","Math","floor","random","length","data","error","from","insert","select","single","id","console","alert","handleResponse","questionId","response","prev","nextVignette","handleSubmit","updateError","update","submitted","eq","insertError","respondent_id","response_data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","text","type","options","option","onClick","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/liumeng/Documents/flask_survey/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = 'https://pkmnyoyvezizgqzycyuz.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBrbW55b3l2ZXppemdxenljeXV6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjgyMjU4MDAsImV4cCI6MjA0MzgwMTgwMH0.le8V0aqC8jouFoUC-3XD9bCWqEPXsqInu9buiwzlpKU';\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst conditions = ['A', 'B', 'C'];\nconst vignettes = {\n  'A': ['Vignette A1', 'Vignette A2', 'Vignette A3'],\n  'B': ['Vignette B1', 'Vignette B2', 'Vignette B3'],\n  'C': ['Vignette C1', 'Vignette C2', 'Vignette C3']\n};\nconst questions = [\n  {'id': 'q1', 'text': 'What is your opinion?', 'type': 'likert', 'options': ['Strongly Disagree', 'Disagree', 'Neutral', 'Agree', 'Strongly Agree']},\n  {'id': 'q2', 'text': 'Please explain:', 'type': 'text'}\n];\n\nfunction App() {\n  const [survey, setSurvey] = useState(null);\n  const [currentVignetteIndex, setCurrentVignetteIndex] = useState(0);\n  const [responses, setResponses] = useState({});\n  const [isComplete, setIsComplete] = useState(false);\n  const [respondentId, setRespondentId] = useState(null);\n\n  useEffect(() => {\n    assignCondition();\n  }, []);\n\n  const assignCondition = async () => {\n    try {\n      const condition = conditions[Math.floor(Math.random() * conditions.length)];\n      \n      const { data, error } = await supabase\n        .from('respondents')\n        .insert({ condition: condition })\n        .select()\n        .single();\n\n      if (error) throw error;\n\n      setRespondentId(data.id);\n      setSurvey({\n        condition,\n        vignettes: vignettes[condition],\n        questions\n      });\n    } catch (error) {\n      console.error('Error assigning condition:', error);\n      alert('Error starting survey. Please try again.');\n    }\n  };\n\n  const handleResponse = (questionId, response) => {\n    setResponses(prev => ({\n      ...prev,\n      [currentVignetteIndex]: { ...prev[currentVignetteIndex], [questionId]: response }\n    }));\n  };\n\n  const nextVignette = () => {\n    if (currentVignetteIndex < survey.vignettes.length - 1) {\n      setCurrentVignetteIndex(currentVignetteIndex + 1);\n    } else {\n      setIsComplete(true);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const { error: updateError } = await supabase\n        .from('respondents')\n        .update({ submitted: true })\n        .eq('id', respondentId);\n\n      if (updateError) throw updateError;\n\n      const { error: insertError } = await supabase\n        .from('survey_responses')\n        .insert({\n          respondent_id: respondentId,\n          response_data: responses\n        });\n\n      if (insertError) throw insertError;\n\n      alert('Survey submitted successfully!');\n    } catch (error) {\n      console.error('Error submitting survey:', error);\n      alert('Error submitting survey. Please try again.');\n    }\n  };\n\n  if (!survey) return <div>Loading...</div>;\n\n  return (\n    <div className=\"App\">\n      <h1>Survey</h1>\n      {!isComplete ? (\n        <div>\n          <p>{survey.vignettes[currentVignetteIndex]}</p>\n          {survey.questions.map(question => (\n            <div key={question.id}>\n              <p>{question.text}</p>\n              {question.type === 'likert' ? (\n                question.options.map(option => (\n                  <button key={option} onClick={() => handleResponse(question.id, option)}>{option}</button>\n                ))\n              ) : (\n                <textarea onChange={(e) => handleResponse(question.id, e.target.value)} />\n              )}\n            </div>\n          ))}\n          <button onClick={nextVignette}>\n            {currentVignetteIndex < survey.vignettes.length - 1 ? 'Next' : 'Finish'}\n          </button>\n        </div>\n      ) : (\n        <div>\n          <p>Thank you for completing the survey. Click submit to record your responses.</p>\n          <button onClick={handleSubmit}>Submit Survey</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}